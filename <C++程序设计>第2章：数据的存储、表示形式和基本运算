2.1 C++的数据类型
数据类型是数据的存储方式，数据结构是数据的组织形式。
C++的数据精度、数值范围和内存中占的字节数由C++编译系统决定。
整型数据数据分为长整型，一般整型，和短整型
整型和字符型可以加上修饰符signed（可以正负）/unsigned（只用正数），如果指定signed，数值以补码形式存放，存储单元的最高位用来表示数值符号，占有一个存储单元。

2.2 常量
字面常量或直接常量，例如1，1.1， ‘a’。
浮点数在内存中以指数形式存储，数字部分小于1，小数点后面第一位非0。
字符常量只包括一个字符，不可以‘ab’。
字符常量使用单引号。
转义字符常量，以‘\’开始。
将一个字符常量存放到内存单元时，并不是直接把该字符存入内存中，而是把该字符的ASCII码（二进制表示）存入内存。
字符类型和整数类型可以通用，一个字符数据可以赋值给整数变量，反之也可以。
字符串常量使用双引号，“abc”，编译系统会在字符串常量后面加上‘\0’作为字符串的结束标志。“abc”占四个字节。
字符串常量需要用字符数组来存储。
符号常量，即通过一个符号代表一个常量：#define price 20

2.3 变量
用来标识变量，符号常量，函数，数组，类型等实体名字的有效字符序列称为标识符。
变量必须先定义，后使用：数据类型 变量名列表【= 变量值】
变量初始化不在编译阶段完成，在程序运行阶段完成。
常变量（变量的值不能改变）： const int a，定义时必须初始化】

2.4 C++的运算符

2.5 算术运算符与算术表达式
C++在运算时对所有float类型数据按double处理
如果整数除法涉及负数，则舍入方向存在不确定性。
自增和自减预算：i = 3
j = ++i, j=4,i=4
j = i++, j=3,i=4
j = --i, j=2,i=2
j = i--, j=3,i=2
强制类型转换 类型名（变量名）

2.6 赋值与运算符和赋值表达式

2.7 逗号运算符和逗号表达式

