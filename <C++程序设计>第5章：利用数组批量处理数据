5.1 为什么需要数组
所谓数组，就是用一个统一的名字代表一批数据，通过下标来访问各个数据。
一个数组在内存中占据一片连续的存储单元。

5.2 定义和引用一维数组
一维数组定义：类型名称 数组名称[常量表达式（不可以包含变量）]
不可以对数组大小动态定义，即数组大小不依赖程序运行中变量的值。
数组初始化：
1.在数组定义时全部赋值，{初始值...}。
2.只初始化一部分元素。
3.对全部原始初始化，可以不写数组长度。

5.3 定义和引用二维数组
二维数据定义形式：类型名 数组名[常量表达式][常量表达式]
二维数组的第一维仍是数组名。
数组元素可以引用，也可以赋值。
二维数组初始化：
1.全部赋予初始值{{},{},{}....}
2.将全部元素写在一个大括号内，指定数组一维二维个数。
3.对部分元素赋值，未赋值元素自动归零。

5.4 用数组做函数参数
数组名可以做形参和实参，传递的是数组的地址。
数组名作为函数实参时，并不是把数组元素传递给形参，而是把数组地址传递给形参，因此形参元素的变化也会导致实参元素的变化。
定义含有数组参数的函数 def func(int array[])

5.5 字符数组
字符数组是用来存放字符的数组，每一个元素存放一个字符。
字符数组初始化元素不够时，补充‘\0’。
定义字符数组：char c[]
在字符数组初始化以后，只能对数组元素赋值，不能对数组赋值，因为数组名表示的地址。
有效字符加上'\0'组成字符数组的长度。
用字符串常量来初始数组：char s[] = "I am happy"。
字符串结尾由系统自动加上'\0'。
strcat(char[], const char[])：字符串拼接
strcpy(char[], const char[]):将第二个字符串复制给第一个






5.6 C++处理字符串的方法--字符串类数组与字符串变量 

