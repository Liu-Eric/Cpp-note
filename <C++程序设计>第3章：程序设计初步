3.1 基于过程的程序设计和算法
一个基于过程的程序包括对数据的描述和对操作的描述。

3.2 C++的程序结构和C++语句
每一个程序单位（一个程序文件）有以下三部分组成：
1.预处理命令（include、define）
2.函数（main）
3.全局声明（函数外对数据类型、函数以及变量的声明定义）
C++的最小单位语句，以;结束
C++语句分为声明语句、执行语句（控制语句、表达式语句、函数和流对象调用语句）、空语句、复合语句（用{}包括进来的语句）

3.3 赋值操作
‘=’是C++赋值运算符
赋值表达式，即一个表达式充当一个变量
if((a=b)>0):相当于a=b；if(a>0)...

3.4 C++的输入与输出
C++是通过调用输入输出流库中的流对象cin和cout实现的，也就是说，输入输出不是C++本身定义的，而是在编译系统提供的i/o库中定义的
C++的输入和输出是用流的方式实现的。流指的是来自设备和传给设备的一个数据流，由一系列字节组成，按照流的顺序排列，cout是输出流对象，cin是输入流对象名字，‘<<’是流插入运算符，其作用是将需要输出的内容插入到输出流中，‘>>’是流提取运算符，起作用是从默认的输入设备提取流送到指定的字符中。
#inlude <isotream>
cout语句的一般输出格式为：
cout<<表达式1<<表达式2<<表达式3
cin语句的一般格式为：
cin>>变量1>>变量2>>变量3
在定义流对象时，系统会在内存开辟一段缓冲区，在执行cout时，并不是立刻执行，而是缓存区满或者遇到cout语句中的'endl'('\n')，才输出语句并清空缓存。
cout<<a,b,c(错误) 正确：cout<<a<<b<<c
cin>>a>>b>>c>>d cin通过空格和回车区别不同输入
系统根据输入对象的类型从输入流中提取相应长度的字符串。
使用输出控制符，需要include<isomanip>文件
putchar（）C语言输出一个字符。
getchar()从终端输入一个字符。
scanf（格式控制，输入列表）
printf（格式控制，输出列表）

3.5 编写顺序结构的程序

3.6 关系运算与逻辑运算
真的值为1，假的值为0。
C++增加了逻辑型数据，true和false，通过标识符bool定义。
编译系统将false处理为0,true处理为1。因此bool变量可以参与数学运算。
&&逻辑与，||逻辑或， ！逻辑非
！>算术运算符>关系运算符>&&、||>赋值运算符

3.7 选择语句和if结构
分支执行语句：
if（表达式） 语句1
[else if 语句2]
[else if 语句3]
[else 语句4]
if嵌套语句：
if(){if ... else ...}
else{if ... else ...}
else与最近的未配对的if配对。
switch(表达式)
{case 常量表达式1：语句1
case 常量表达式2：语句2
case 常量表达式3：语句3
default：语句4}
执行完一个case语句后会接着执行后续case语句，需要break退出。

3.8 循环结构和循环语句
while(表达式){语句}
do {语句} while(表达式)：语句至少执行一次
for(表达式1；表达式2；表达式3) {语句}
for(循环变量赋初值;循环条件;循环变量自增) {语句}
用break提前结束循环
用continue结束本次循环


















