4.1 什么是函数
函数不能嵌套定义，即不能在定义一个函数中定义另一个函数。
main函数是程序主函数，由程序调用。
如果main函数调用的函数定义在main函数之后，需要在调用前先声明。
调用库函数不需要声明，已经在头文件中声明过了。

4.2 定义函数的一般形式
定义函数的一般形式为：
类型名 函数名（参数）{声明部分；执行语句}

4.3 函数的参数和函数的值 
定义中括号内参数为形式参数，调用时括号内参数为实际参数。
函数定义时形参不占内存，调用时为形参分配空间，调用完成后形参空间释放。
实参向形参的传递为单向传递，只由实参传给形参，形参不能传给实参，实参的值不会给变。即时实参和形参同名，实参和形参也是两块内存空间。
一个函数可以包含多个return语句。
如果函数返回类型和返回值类型不同，以函数返回类型为主进行相应转变。

4.4 函数调用
函数调用的一般形式：
函数名（[实参列表]）
函数声明只是把函数名称，参数，返回值告诉编译程序。

4.5 函数的嵌套调用
调用前先声明

4.6 函数的递归调用

4.7 内置函数
在编译过程中将函数代码直接嵌入主函数，这种嵌入函数成为内置函数，只需在函数名前加上关键字inline。
可以只在函数声明时加上inline，函数定义时不加inline。
内置函数不能包含循环和switch语句。

4.8 函数的重载
C++允许用同一函数名定义多个函数，要求函数参数个数或函数参数类型或参数顺序不同。

4.9 函数模板
函数模板就是建立一个通用函数，其函数类型和参数类型都不具体确定，用一个虚拟类型代替。
定义函数模板的一般形式为:
template <typename/class T1, typename T2, ...>
通用函数定义

4.10 有默认参数的函数
指定默认值的参数必须放在最后。
若果函数定义在函数使用之前，在函数定义中使用默认值，如果函数定在在函数使用之后，则需要在函数声明中使用默认值。
应该避免在函数声明中给出默认值，又在函数定义中给出默认值。

4.11 局部变量和全局变量 
在一个函数内部定义的变量是内部变量，只能在函数范围内有效。形参也是函数内部变量。
在复合语句中定义的变量也是内部变量。
函数外定义的变量是全局变量，有效范围是从定义到文件结束。
对于重名的局部变量和全局变量，局部变量屏蔽全局变量。
变量的作用范围成为作用域，作用域分为四类：文件作用域，函数作用域，块作用域，函数原型作用域。

4.12 变量的存储类别
变量还有另一种属性，存储期，即变量在内存中的存储周期。存储期分为动态存储期和静态存储期，这是由变量的存储方式决定的。
静态存储是在程序运行期间，系统对变量分配固定的存储空间。动态存储是指系统动态的对变量分配存储空间。
内存存储空间分为：程序区，静态存储区，动态存储区。
全局变量全部放在静态存储区，在程序开始时分配存储空间，程序结束后收回。
动态存储区存放以下数据：函数形式参数，调用函数时给形参分配空间，函数中定义的变量，函数调用的现场保护和返回地址等。函数调用时分配空间，调用完成收回空间。
存储类别有：自动的，静态的，寄存器的，外部的。
局部变量在调用时分配空间，作用域完成后收回空间。即自动变量（auto）。
自动变量是在程序运行中赋值。
静态局部变量，在调用完成后不收回空间，下次调用时继续使用，使用关键字static。
静态局部变量存储在静态存储期，函数完成后不释放，在程序结束后才释放。
静态局部变量在编译时赋值，只赋值一次。如果静态局部变量没有赋初值，则为0或空。
静态局部变量不能被其他函数引用。
静态全局变量表示该变量的作用域仅限于本文件。
对于需要反复调用的变量，通过关键字register将变量寄存在CPU中，提升运行速度。
全局变量存储在静态存储区。
如果想在全局变量定义之前使用全局变量，则需要extern关键字声明该变量，表示该变量是随后定义的全局变量。
如果两个文件用到相同的外部变量，在一个文件定义外部变量，在另一个文件声明外部变量。
如果一个文件的外部变量不希望被别的文件使用，在外部变量定义前加static。

4.13 变量属性小结

4.14 关于变量的声明和调用 
对于变量而言，把需要划分存储空间的声明称为定义，不需要划分存储空间的称为声明。

4.15 内部函数和外部函数
内部函数仅能被本文件调用，内部函数定义加static。
在函数定义时，如果加上extern，表示此函数是外部函数，可供其他文件调用。省略extern默认为外部函数。
用函数原型（函数声明）将函数作用域扩充到本文件。

4.16 头文件 
头文件一般包括：对类型的声明，对函数的声明（函数定义不放在头文件中），内置函数定义，宏定义，全局变量定义，外部变量声明。


















